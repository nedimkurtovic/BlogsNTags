// <auto-generated />
using System;
using BlogsNTags.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogsNTags.Database.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20210428133431_Seed")]
    partial class Seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlogsNTags.Database.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eleifend nec justo ut sagittis. Curabitur vestibulum lorem vel est suscipit varius ac sed tellus. Maecenas efficitur nibh a velit sollicitudin ornare. Proin ac dui imperdiet, tincidunt turpis in, finibus ligula. Donec sed massa quis magna imperdiet cursus vitae quis justo",
                            CreatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 508, DateTimeKind.Local).AddTicks(4341),
                            Description = "Short description about upcoming changes",
                            Slug = "upcoming-changes-in-angularjs",
                            Title = "Upcoming changes in AngularJS",
                            UpdatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 508, DateTimeKind.Local).AddTicks(4427)
                        },
                        new
                        {
                            Id = 2,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eleifend nec justo ut sagittis. Curabitur vestibulum lorem vel est suscipit varius ac sed tellus. Maecenas efficitur nibh a velit sollicitudin ornare. Proin ac dui imperdiet, tincidunt turpis in, finibus ligula. Donec sed massa quis magna imperdiet cursus vitae quis justo",
                            CreatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 508, DateTimeKind.Local).AddTicks(4446),
                            Description = "Some description",
                            Slug = "testing-your-accented-characters-test-or",
                            Title = "țestíng your accëntëd čharacters teśt, or | .-> []",
                            UpdatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 508, DateTimeKind.Local).AddTicks(4451)
                        },
                        new
                        {
                            Id = 3,
                            Body = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eleifend nec justo ut sagittis. Curabitur vestibulum lorem vel est suscipit varius ac sed tellus. Maecenas efficitur nibh a velit sollicitudin ornare. Proin ac dui imperdiet, tincidunt turpis in, finibus ligula. Donec sed massa quis magna imperdiet cursus vitae quis justo",
                            CreatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 508, DateTimeKind.Local).AddTicks(4458),
                            Description = "Genning the migs",
                            Slug = "adding-migrations-to-net-core-31-using-ef",
                            Title = "Adding migrations to .NET core 3.1 using EF",
                            UpdatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 508, DateTimeKind.Local).AddTicks(4462)
                        });
                });

            modelBuilder.Entity("BlogsNTags.Database.Models.BlogsTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("TagId");

                    b.ToTable("BlogsTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            TagId = 3
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 3,
                            TagId = 4
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 3,
                            TagId = 5
                        });
                });

            modelBuilder.Entity("BlogsNTags.Database.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 496, DateTimeKind.Local).AddTicks(1666),
                            Name = "ios",
                            UpdatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 504, DateTimeKind.Local).AddTicks(8308)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 504, DateTimeKind.Local).AddTicks(9652),
                            Name = "android",
                            UpdatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 504, DateTimeKind.Local).AddTicks(9680)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 504, DateTimeKind.Local).AddTicks(9687),
                            Name = "AngularJS",
                            UpdatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 504, DateTimeKind.Local).AddTicks(9694)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 504, DateTimeKind.Local).AddTicks(9702),
                            Name = "EntityFramework",
                            UpdatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 504, DateTimeKind.Local).AddTicks(9707)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 504, DateTimeKind.Local).AddTicks(9715),
                            Name = "dotnet",
                            UpdatedAt = new DateTime(2021, 4, 28, 15, 34, 30, 504, DateTimeKind.Local).AddTicks(9720)
                        });
                });

            modelBuilder.Entity("BlogsNTags.Database.Models.BlogsTags", b =>
                {
                    b.HasOne("BlogsNTags.Database.Models.Blog", "Blog")
                        .WithMany("BlogsTags")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlogsNTags.Database.Models.Tag", "Tag")
                        .WithMany("BlogsTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("BlogsNTags.Database.Models.Blog", b =>
                {
                    b.Navigation("BlogsTags");
                });

            modelBuilder.Entity("BlogsNTags.Database.Models.Tag", b =>
                {
                    b.Navigation("BlogsTags");
                });
#pragma warning restore 612, 618
        }
    }
}
